import sqlite3 as lite 
import argparse
from datetime import datetime

def arg_parser():
    ap = argparse.ArgumentParser("find the cluster of the sigma events")
    
    ap.add_argument('-db',dest="db_path",metavar="DATABASE",type=str,help="The path of database")
    
    return ap.parse_args()

def find_relation(conn,predictor,duration):
    sql = "select post_date, name, zscore30 from t_enriched_bloomberg_prices where name='{}' and post_date>='2003-01-01' and (abs(zscore30)>=4 or abs(zscore90)>=3) ".format(predictor)
    cur = conn.cursor()
    cur.execute(sql)
    results = cur.fetchall()
    for result in results:
        p_stock = result[1]
        p_post_date = result[0]
        zscore30 = result[2]
        event_type = ""
        if zscore30 > 0:
            event_type = "0411"
        else:
            event_type = "0412"
        
        p_event = {"p_stock":p_stock,"event_type":event_type,"post_date":p_post_date}
        print p_event
    

def get_round_events(conn,p_event,duration):
    pass

def get_day_range(post_date,duration):
    max_date = datetime.strptime(post_date,"%Y-%m-%d")
    min_date = datetime.strptime(post_date,"%Y-%m-%d")
    du = duration
    
    while duration > 0:
        max_date = max_date + datetime.timedelta(days = 1)
        week_day = max_date.weekday()
        if week_day == 5 or week_day == 6:
            continue
        duration = duration - 1
    
        
    d1 = datetime.datetime.now()
    d3 = d1 + datetime.timedelta(days =10)
    

def main():
    t_indices = ['MERVAL','MEXBOL','IBOV','CHILE65','COLCAP','CRSMBCT','BVPSBVPS','IGBVL','IBVC']
    p_indices = ['AEX','AS51','CAC','CCMP','DAX','FTSMIB','HSI','IBEX','INDU','NKY','OMX','SMI','SPTSX','SX5E','UKX']
    
    args = arg_parser()
    db_path = args.db_path
    conn = lite.connect(db_path)
    for p_index in p_indices:
        find_relation(conn,p_index)
    
    if conn:
        conn.close()

if __name__ == "__main__":
    main()        